AboveDisplayPropertyKeys: R2D2WExtraDisplayPropertyKeys {
    localContext = d2wContext;
	extraPropertiesKey = "aboveDisplayPropertyKeys";
	dataSource = queryDataSource;
}

ActionBar: WOSwitchComponent {
	WOComponentName = d2wContext.actionBarComponentName;
	d2wContext = d2wContext;
}

Banner: R2DBannerComponent {
	d2wContext = d2wContext;
}

BelowDisplayPropertyKeys: R2D2WExtraDisplayPropertyKeys {
    localContext = d2wContext;
	extraPropertiesKey = "belowDisplayPropertyKeys";
	dataSource = queryDataSource;
}

ComponentDebug: R2DDebuggingComponentHelp {
	localContext = d2wContext;
}

ComponentDiv: WOGenericContainer {
	elementName = "div";
	class = d2wContext.pageClasses;
}

ComponentName: WOSwitchComponent {
	displayGroup = displayGroup;
	localContext = d2wContext;
	WOComponentName = d2wContext.componentName;
}

Controller: WOSwitchComponent {
	WOComponentName = d2wContext.controllerButtonComponentName;
	d2wContext = d2wContext;
}

Errors: R2DErrorDictionaryPanel {
	errorMessages = errorMessages;
	extraErrorMessage = errorMessage;
	errorKeyOrder = errorKeyOrder;
}

EntityName: WOString {
	value = localContext.displayNameForEntity;
}

FindButton: WOSubmitButton {
	action = queryAction;
	value = d2wContext.findButtonLabel;
}

Help: R2DDebuggingHelp {
	d2wContext = d2wContext;
}

ListPage: ERXD2WList {
	dataSource = queryDataSource;
	entityName = entity.name;
	pageConfiguration = d2wContext.listConfigurationName;
}

PageWrapper: WOSwitchComponent {
	WOComponentName = pageWrapperName;
}

QueryForm: WOForm {
	action = queryAction;
	disabled = d2wContext.formDisabled;
	enctype = d2wContext.formEncoding;
	multipleSubmit = true;
	secure = d2wContext.secureForm;
}

QueryRepetition: WORepetition {
	item = d2wContext.propertyKey;
	list = d2wContext.displayPropertyKeys;
}

ReturnButton: WOSubmitButton {
	action = cancelAction;
	value = d2wContext.returnButtonLabel;
}

ShowCancel: WOConditional {
	condition = showCancel;
}

ShowListInPage: WOConditional {
	condition = d2wContext.showListInSamePage;
}

ShowResults: WOConditional {
	condition = showResults;
}
