{
    attributes = (
        {allowsNull = N; columnName = token; name = token; prototypeName = varchar50; }, 
        {allowsNull = N; columnName = userID; name = userID; prototypeName = id; }
    ); 
    attributesUsedForLocking = (token, userID); 
    className = "er.users.model.ERActivateUserToken"; 
    classProperties = (user); 
    entityIndexes = (
        {
            attributes = (userID); 
            constraint = distinct; 
            indexType = clustered; 
            name = "ERActivateUserToken_userID_unique_idx"; 
            order = asc; 
        }
    ); 
    externalName = ERActivateUserToken; 
    fetchSpecificationDictionary = {}; 
    name = ERActivateUserToken; 
    primaryKeyAttributes = (token); 
    relationships = (
        {
            destination = ERUser; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = id; sourceAttribute = userID; }); 
            name = user; 
            userInfo = {ERXInverseRelationshipName = activateUserToken; }; 
        }
    ); 
}
