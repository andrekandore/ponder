{
    attributes = (
        {columnName = answer; name = answer; prototypeName = varchar50; width = 60; }, 
        {
            allowsNull = N; 
            columnName = challengeQuestionID; 
            name = challengeQuestionID; 
            prototypeName = id; 
        }, 
        {allowsNull = N; name = id; prototypeName = id; }, 
        {allowsNull = N; columnName = userID; name = userID; prototypeName = id; }
    ); 
    attributesUsedForLocking = (answer, challengeQuestionID, id, userID); 
    className = "er.users.model.ERChallengeResponse"; 
    classProperties = (answer, challengeQuestion, user); 
    entityIndexes = (
        {
            attributes = (userID, challengeQuestionID); 
            constraint = distinct; 
            indexType = clustered; 
            name = "challengeQuestionID_userID_idx"; 
            order = asc; 
        }
    ); 
    externalName = ERChallengeResponse; 
    fetchSpecificationDictionary = {}; 
    name = ERChallengeResponse; 
    primaryKeyAttributes = (id); 
    relationships = (
        {
            destination = ERChallengeQuestion; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = id; sourceAttribute = challengeQuestionID; }); 
            name = challengeQuestion; 
        }, 
        {
            destination = ERUser; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = id; sourceAttribute = userID; }); 
            name = user; 
        }
    ); 
}
