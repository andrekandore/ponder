{
    attributes = (
        {allowsNull = N; name = id; prototypeName = id; }, 
        {
            allowsNull = N; 
            columnName = mailAddressID; 
            name = mailAddressID; 
            prototypeName = longNumber; 
        }, 
        {
            allowsNull = N; 
            columnName = mailMessageID; 
            name = mailMessageID; 
            prototypeName = longNumber; 
        }, 
        {
            columnName = notificationTimestamp; 
            name = notificationTimestamp; 
            prototypeName = dateTime; 
        }, 
        {
            columnName = notificationType; 
            name = notificationType; 
            prototypeName = javaEnum; 
            valueClassName = "er.corebl.mail.ERCMailNotificationType"; 
        }
    ); 
    attributesUsedForLocking = (id, mailAddressID, mailMessageID, notificationTimestamp, notificationType); 
    className = "er.corebl.model.ERCMailNotification"; 
    classProperties = (mailAddress, mailMessage, notificationTimestamp, notificationType); 
    externalName = ERCMailNotification; 
    fetchSpecificationDictionary = {}; 
    name = ERCMailNotification; 
    primaryKeyAttributes = (id); 
    relationships = (
        {
            destination = ERCMailAddress; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = id; sourceAttribute = mailAddressID; }); 
            name = mailAddress; 
        }, 
        {
            destination = ERCMailMessage; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = id; sourceAttribute = mailMessageID; }); 
            name = mailMessage; 
        }
    ); 
}
