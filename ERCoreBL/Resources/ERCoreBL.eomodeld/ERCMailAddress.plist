{
    attributes = (
        {
            allowsNull = Y; 
            columnName = dateLastSent; 
            name = dateLastSent; 
            prototypeName = dateTime; 
        }, 
        {
            columnName = emailAddress; 
            name = emailAddress; 
            prototypeName = varchar255; 
            width = 254; 
        }, 
        {allowsNull = N; columnName = id; name = id; prototypeName = longNumber; }, 
        {
            allowsNull = Y; 
            columnName = stopReason; 
            name = stopReason; 
            prototypeName = javaEnum; 
            valueClassName = "er.corebl.mail.ERCMailStopReason"; 
        }, 
        {
            columnName = verificationState; 
            name = verificationState; 
            prototypeName = javaEnum; 
            valueClassName = "er.corebl.mail.ERCMailAddressVerification"; 
        }
    ); 
    attributesUsedForLocking = (dateLastSent, emailAddress, id, stopReason, verificationState); 
    className = "er.corebl.model.ERCMailAddress"; 
    classProperties = (dateLastSent, emailAddress, optInCategories, stopReason, verificationState); 
    entityIndexes = (
        {
            attributes = (emailAddress); 
            constraint = distinct; 
            indexType = clustered; 
            name = "ERCMailAddress_emailAddress_unique_idx"; 
            order = asc; 
        }
    ); 
    externalName = ERCMailAddress; 
    fetchSpecificationDictionary = {}; 
    name = ERCMailAddress; 
    primaryKeyAttributes = (id); 
    relationships = (
        {
            deleteRule = EODeleteRuleCascade; 
            destination = ERCMailAddressCategoryPreference; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = ercMailAddressId; sourceAttribute = id; }); 
            name = ercMailAddressCategoryPreferences; 
            propagatesPrimaryKey = Y; 
        }, 
        {
            definition = "ercMailAddressCategoryPreferences.ercMailCategory"; 
            name = optInCategories; 
        }
    ); 
    userInfo = {
        ERXAuditKeys = (
            emailAddress, 
            isActive, 
            "ercMailAddressCategoryPreferences.ercMailCategory.name"
        ); 
    }; 
}
